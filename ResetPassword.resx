<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>